{"version":3,"sources":["component/ImageGalleryItem/ImageGalleryItem.module.css","component/Modal/Modal.module.css","component/ImageGallery/ImageGallery.module.css","component/Button/Button.module.css","component/Loader/Loader.module.css","component/SearchBar/SearchBar.module.css","component/SearchBar/SearchBar.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","component/Button/Button.js","component/Loader/Loader.js","component/Modal/Modal.js","services/imageApi.js","App.js","index.js"],"names":["module","exports","SearchBar","onSubmit","useState","query","setQuery","className","styles","Searchbar","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","id","previewImage","toggle","onClick","src","alt","ImageGalleryItemImage","ImageGallery","items","map","webformatURL","largeImageURL","Button","Spin","spin","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","bigImage","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","KEY","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","searchQuery","page","get","then","response","data","hits","App","images","setImages","setPage","setSearchQuery","isLoading","setIsLoading","showModal","setShowModal","modalImage","setModalImage","scrollWindow","imageApi","finally","scrollBy","top","documentElement","clientHeight","behavior","toggleModal","url","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68a89930.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3NvYh\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2BTnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__14rKd\",\"Modal\":\"Modal_Modal__1Bq0D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1uugz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3vJVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin\":\"Loader_spin__3Dx2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"SearchBar_App__UJwCz\",\"Searchbar\":\"SearchBar_Searchbar__2ncaH\",\"SearchForm\":\"SearchBar_SearchForm__SbCm2\",\"SearchFormButton\":\"SearchBar_SearchFormButton__jTdRD\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__1Np9j\",\"SearchFormInput\":\"SearchBar_SearchFormInput__3heNi\"};","import { useState } from 'react';\r\nimport styles from './SearchBar.module.css';\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setQuery(e.currentTarget.value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className={styles.Searchbar}>\r\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={styles.SearchFormButton}>\r\n          <span className={styles.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={styles.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={query}\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ id, previewImage, toggle }) => {\r\n  return (\r\n    <li key={id} className={styles.ImageGalleryItem} onClick={toggle}>\r\n      <img src={previewImage} alt=\"\" className={styles.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport styles from './ImageGallery.module.css';\r\n\r\nconst ImageGallery = ({ items, toggle }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {items.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          id={id}\r\n          previewImage={webformatURL}\r\n          toggle={() => toggle(largeImageURL)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className={styles.Button} type=\"submit\" onClick={() => onClick()}>\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Spin = () => {\r\n  return (\r\n    <div className={styles.spin}>\r\n      <Loader\r\n        type=\"Hearts\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={30000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Spin;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, bigImage }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.Overlay}>\r\n      <div className={styles.Modal}>\r\n        <img src={bigImage} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst KEY = '20407857-5cbc70afd557f45317642044e';\r\nconst URL = 'https://pixabay.com/api/';\r\naxios.defaults.baseURL = URL;\r\naxios.defaults.params = {\r\n  key: KEY,\r\n  image_type: 'photo',\r\n  orientation: 'horizontal',\r\n  per_page: 12,\r\n};\r\nconst fetchImages = (searchQuery, page) => {\r\n  return axios\r\n    .get(`?q=${searchQuery}&page=${page}&key=${KEY}&`)\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default fetchImages;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport SearchBar from './component/SearchBar';\r\nimport ImageGallery from './component/ImageGallery';\r\nimport Button from './component/Button';\r\nimport Spin from './component/Loader';\r\nimport Modal from './component/Modal';\r\nimport imageApi from './services/imageApi';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalImage, setModalImage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n    fetchImages();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchQuery]);\r\n\r\n  useEffect(() => {\r\n    if (page > 2) {\r\n      scrollWindow();\r\n    }\r\n  }, [page]);\r\n\r\n  const onChangeQuery = query => {\r\n    setSearchQuery(query);\r\n    setPage(1);\r\n    setImages([]);\r\n  };\r\n  const fetchImages = () => {\r\n    setIsLoading(true);\r\n\r\n    imageApi(searchQuery, page)\r\n      .then(hits => {\r\n        setImages(images => [...images, ...hits]);\r\n        setPage(page => page + 1);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  };\r\n  const scrollWindow = () => {\r\n    window.scrollBy({\r\n      top: document.documentElement.clientHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n  const openBigImage = url => {\r\n    setModalImage(url);\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar onSubmit={onChangeQuery} />\r\n\r\n      <ImageGallery items={images} toggle={openBigImage} />\r\n\r\n      {images.length > 0 && !isLoading && <Button onClick={fetchImages} />}\r\n      {isLoading && <Spin />}\r\n      {showModal && <Modal onClose={toggleModal} bigImage={modalImage} />}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}